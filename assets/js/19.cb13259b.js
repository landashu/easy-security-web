(window.webpackJsonp=window.webpackJsonp||[]).push([[19],{507:function(s,e,n){"use strict";n.r(e);var a=n(41),t=Object(a.a)({},(function(){var s=this,e=s.$createElement,n=s._self._c||e;return n("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[n("h2",{attrs:{id:"常用配置"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#常用配置"}},[s._v("#")]),s._v(" 常用配置")]),s._v(" "),n("p",[s._v("在快速开始中对用到的配置进行了简单的介绍，那么他们具体做了哪些？")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('easy\n  security:\n    # 开启认证\n    auth-enable: true\n    # 开启鉴权\n    authorize-enable: true\n    # 需要加解密的路径，前端数据解密，后端返回数据加密\n    decrypt-url: ""\n    # 不受认证鉴权影响\n    special-url: \n      - /oss/**\n    # 黑名单\n    black-list: \n      - 192.168.148.42\n      - 192.168.148.41\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br")])]),n("ul",[n("li",[s._v("auth-enable：该配置是管理认证是否启用的，默认 false，为 false 表示所有的请求都不会拦截进行认证判断。")]),s._v(" "),n("li",[s._v("authorize-enable：该配种用于管理鉴权是否启用，默认 false，为 false 表示所有的请求不会校验权限。")])]),s._v(" "),n("blockquote",[n("p",[s._v("authorize-enable 和 auth-enable 可以一起使用也可以分开使用，当只需要认证不需要鉴权的时候 auth-enable = true 即可，反而只需要鉴权不需要认证的时候 authorize-enable = true 即可。这样的搭配是为了开发者，在开发过程、测试以及调试提供便利。")])]),s._v(" "),n("ul",[n("li",[s._v("special-url：当你有一些其他的访问格式，又不想收权限和认证，可以在这里配置路径，比如登录接口 一开始不需要认证。")]),s._v(" "),n("li",[s._v("decrypt-url：是一个解密路径，当你的需求中出现数据需要密文给后端，以防止敏感数据劫持，前端需要把请求数据加密，而后端需要解密，可以把需要解密的路径配置在这里。")])]),s._v(" "),n("blockquote",[n("p",[s._v("decrypt-url 不止会对前端传输的加密数据解密，还会对返回后的结果进行加密，所以前端得到数据后需要自行解密。")])]),s._v(" "),n("ul",[n("li",[s._v("black-list：发现一些恶意请求的，可以在这里配置他的 IP 拒绝他的访问。")])]),s._v(" "),n("h2",{attrs:{id:"其他配置"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#其他配置"}},[s._v("#")]),s._v(" 其他配置")]),s._v(" "),n("ul",[n("li",[s._v("tokenKey：描述前端传给后端 token 的属性名称，默认是 token")]),s._v(" "),n("li",[s._v("errorUrl：当请求的路径没有登录或授权等的时候会返回 404，这是因为过滤器会把异常 forward 到一个接口中，接口路径默认为 /failure/authenticationFilter；建议大家一定要配置（只在 SpringBoot2.x 中使用，3.x 不需要）")])]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('@ControllerAdvice\n@RestControllerAdvice\n@RestController\npublic class Error {\n\n    private static final Log log = LogFactory.getLog(Error.class);\n\n    /**\n     * 处理Exception异常\n     */\n    @ExceptionHandler(Exception.class)\n    @ResponseBody\n    public Rep handleAllExceptions(Exception e, WebRequest request) {\n        if (e instanceof NoHandlerFoundException) {\n            return Rep.error(BasicCode.BASIC_CODE_404);\n        }\n        if(e instanceof BasicException){\n            return Rep.error(((BasicException) e).getCode(),e.getMessage());\n        }\n        if(e instanceof IllegalArgumentException){\n            return Rep.error(BasicCode.BASIC_CODE_99999.getCode(),e.getMessage());\n        }\n        if(e instanceof MissingServletRequestParameterException){\n            log.error(e.getMessage());\n            return Rep.error(BasicCode.BASIC_CODE_99998.getCode(),BasicCode.BASIC_CODE_99998.getMsg());\n        }\n        if(e instanceof HttpRequestMethodNotSupportedException){\n            String msg = e.getMessage();\n            msg = BasicCode.BASIC_CODE_99997.getMsg() +\n                    (StrUtil.isEmpty(msg) ? "": msg.substring(msg.indexOf("\'")-1, msg.lastIndexOf("\'")+1));\n            return Rep.error(BasicCode.BASIC_CODE_99997.getCode(),msg);\n        }\n        e.printStackTrace();\n        String msg = StrUtil.isBlank(e.getMessage()) ? BasicCode.BASIC_CODE_500.getMsg() : e.getMessage();\n        return Rep.error(BasicCode.BASIC_CODE_500.getCode(), msg);\n    }\n    /**\n     * easy-security 会把抛出的异常再次请求到该方法中，只需要捕获并包装即可\n     */\n    @RequestMapping("/failure/authenticationFilter")\n    public Rep error(@RequestParam("code") Integer code, @RequestParam("msg") String msg) {\n        return Rep.error(code, msg);\n    }\n}\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br"),n("span",{staticClass:"line-number"},[s._v("25")]),n("br"),n("span",{staticClass:"line-number"},[s._v("26")]),n("br"),n("span",{staticClass:"line-number"},[s._v("27")]),n("br"),n("span",{staticClass:"line-number"},[s._v("28")]),n("br"),n("span",{staticClass:"line-number"},[s._v("29")]),n("br"),n("span",{staticClass:"line-number"},[s._v("30")]),n("br"),n("span",{staticClass:"line-number"},[s._v("31")]),n("br"),n("span",{staticClass:"line-number"},[s._v("32")]),n("br"),n("span",{staticClass:"line-number"},[s._v("33")]),n("br"),n("span",{staticClass:"line-number"},[s._v("34")]),n("br"),n("span",{staticClass:"line-number"},[s._v("35")]),n("br"),n("span",{staticClass:"line-number"},[s._v("36")]),n("br"),n("span",{staticClass:"line-number"},[s._v("37")]),n("br"),n("span",{staticClass:"line-number"},[s._v("38")]),n("br"),n("span",{staticClass:"line-number"},[s._v("39")]),n("br"),n("span",{staticClass:"line-number"},[s._v("40")]),n("br"),n("span",{staticClass:"line-number"},[s._v("41")]),n("br"),n("span",{staticClass:"line-number"},[s._v("42")]),n("br"),n("span",{staticClass:"line-number"},[s._v("43")]),n("br"),n("span",{staticClass:"line-number"},[s._v("44")]),n("br")])]),n("h2",{attrs:{id:"yapi规则描述"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#yapi规则描述"}},[s._v("#")]),s._v(" Yapi 规则描述")]),s._v(" "),n("p",[s._v("YAPI 是一个优秀的代码无侵入的接口文档，只需要按照我们正常的注解去描述我们方法的作用，使用 Idea 插件，就会自动帮我们生成接口文档。")]),s._v(" "),n("p",[s._v("本框架对 YAPI 做了一些小功能，隐藏 Req 类中多余的字段，只放出 data 属性显示到文档中，您需要在项目中的 application.yml 文件里面添加如下：")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('field:\n  required: "@com.aizuda.easy.security.annotation.yapi.YApiRule#required"\n  default:\n    value: "#default"\njson:\n  rule:\n    field:\n      ignore: "@com.aizuda.easy.security.annotation.yapi.YApiRule#hide"\n\nmethod:\n  additional:\n    header[!@com.aizuda.easy.security.annotation.yapi.YApiRule]: \'{name: "token",value: "ddb9ba4f842529e539560b0a6df23408de27dbed00860a1c3c5af04d44fa3c39",required: true}\'\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br")])]),n("p",[s._v("如果不使用配置则会在这个文档中显示多余的 user 和 token 字段。")])])}),[],!1,null,null,null);e.default=t.exports}}]);